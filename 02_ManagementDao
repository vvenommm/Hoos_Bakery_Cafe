package dao;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import util.JDBCUtil;

public class ManagementDao {
	
	//싱글톤 패턴
	private ManagementDao() {
			
	}
	private static ManagementDao instance; 
	public static ManagementDao getInstance() { 
		if(instance == null) {
			instance = new ManagementDao();
		}
		return instance;
	}
	
	
/////////////////////////////////////////////////////////////////////////////////
	
	
	//모든 메뉴 5개씩 출력
	
	public List<Map<String, Object>> allProdList(){
		String sql = "SELECT U.* " + 
				" FROM " + 
				" ( " + 
				"    SELECT ROWNUM RNUM, T.* " + 
				"    FROM " + 
				"    ( " + 
				"        SELECT MENU_ID FROM B_MENU " + 
				"        WHERE  MENU_ID LIKE '?%' " + 
				"        ORDER BY MENU_ID DESC " + 
				"    ) T " + 
				" ) U " + 
				" WHERE U.RNUM <= 5";
		
		
		
		return JDBCUtil.selectList(sql);
	}

	
/////////////////////////////////////////////////////////////////////////////////

	
	//각 제품 출력
	public List<Map<String, Object>> breadList(){
		String sql = "SELECT U.* " + 
				" FROM " + 
				" ( " + 
				"    SELECT ROWNUM RNUM, T.* " + 
				"    FROM " + 
				"    ( " + 
				"        SELECT MENU_ID FROM B_MENU " + 
				"        WHERE  MENU_ID LIKE 'a%' " + 
				"        ORDER BY MENU_ID DESC " + 
				"    ) T " + 
				" ) U " + 
				" WHERE U.RNUM <= 3";
		
		return JDBCUtil.selectList(sql);
	}
	
	public List<Map<String, Object>> cookieList(){
		String sql = "SELECT U.* " + 
				" FROM " + 
				" ( " + 
				"    SELECT ROWNUM RNUM, T.* " + 
				"    FROM " + 
				"    ( " + 
				"        SELECT MENU_ID FROM B_MENU " + 
				"        WHERE  MENU_ID LIKE 'b%' " + 
				"        ORDER BY MENU_ID DESC " + 
				"    ) T " + 
				" ) U " + 
				" WHERE U.RNUM <= 3";
		
		return JDBCUtil.selectList(sql);
	}
	
	public List<Map<String, Object>> cakeList(){
		String sql = "SELECT U.* " + 
				" FROM " + 
				" ( " + 
				"    SELECT ROWNUM RNUM, T.* " + 
				"    FROM " + 
				"    ( " + 
				"        SELECT MENU_ID FROM B_MENU " + 
				"        WHERE  MENU_ID LIKE 'c%' " + 
				"        ORDER BY MENU_ID DESC " + 
				"    ) T " + 
				" ) U " + 
				" WHERE U.RNUM <= 3";
		
		return JDBCUtil.selectList(sql);
	}
	
	public List<Map<String, Object>> drinkList(){
		String sql = "SELECT U.* " + 
				" FROM " + 
				" ( " + 
				"    SELECT ROWNUM RNUM, T.* " + 
				"    FROM " + 
				"    ( " + 
				"        SELECT MENU_ID FROM B_MENU " + 
				"        WHERE  MENU_ID LIKE 'd%' " + 
				"        ORDER BY MENU_ID DESC " + 
				"    ) T " + 
				" ) U " + 
				" WHERE U.RNUM <= 3";
		
		return JDBCUtil.selectList(sql);
	}
	
	
/////////////////////////////////////////////////////////////////////////////////
	
	
	public int insertMenu(String type, String name, int price, String detail){
		String sql = "INSERT INTO B_MENU(MENU_ID, MEMU_NAME, MENU_PRICE, MENU_DETAIL, MEMU_ACTIVE) VALUES(? || MAX(TO_NUMBER(SUBSTR(NVL(MENU_ID,0), 2)))+1, ?, ?, ?, ?)";
		List<Object> param = new ArrayList<Object>();
		
		param.add(type);
		param.add(name);
		param.add(price);
		param.add(detail);
		param.add("on");
		return JDBCUtil.update(sql, param);
	}
	
	
/////////////////////////////////////////////////////////////////////////////////
	
	
	//기존 메뉴 수정하기
	public int editMenu(String name, String price, String detail){
		String sql = "INSERT B_MENU(MENU_NAME, MENU_PRICE, MENU_DETAIL) VALUES(?, ?, ?) WHERE ";
		List<Object> param = new ArrayList<Object>();
		
		param.add(name);
		param.add(price);
		param.add(detail);
		
		return JDBCUtil.update(sql, param);
	}
	
	
/////////////////////////////////////////////////////////////////////////////////
	
	
	public List<Map<String, Object>> mngOrder(){
		String sql = "SELECT RSV_OD, RSV_DATE, RSV_ETC, MEM_ID, RSV_APRV FROM B_RSV WHERE RSV_DATE > SYSDATE";
		return JDBCUtil.selectList(sql);
	}
	
	
/////////////////////////////////////////////////////////////////////////////////
	
	
	//앞으로 찾아갈 승인된 예약 주문들
	public List<Map<String, Object>> aprvedOrder(){
		String sql = "SELECT RSV_OD, RSV_PIKCUP, RSV_ETC, MEM_ID FROM B_RSV WHERE RSV_APRV LIKE '승인' AND RSV_PICKUP > SYSDATE";
		return JDBCUtil.selectList(sql);
	}
	
	
/////////////////////////////////////////////////////////////////////////////////
	
	
	//새로 예약해서 승인을 기다리는 주문 들
	public List<Map<String, Object>> newOrder(){
		String sql = "SELECT R.RSV_OD, M.MENU_NAME, (R.RSV_QTY || '개'), R.RSV_DATE, R.RSV_ETC, R.MEM_ID, R.RSV_APRV FROM B_RSV R, B_MENU M WHERE M.MENU_ID = r.RSV_CODE AND RSV_APRV LIKE '신청'";
		return JDBCUtil.selectList(sql);
	}
	
	
	



} 
